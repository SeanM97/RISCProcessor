<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\alu16.v" Line 38: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">17</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\alu16.v" Line 47: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">17</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 93: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 103: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 105: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 128: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 132: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 133: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 139: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 143: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 144: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 150: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 154: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 155: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 161: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 165: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 172: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 176: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 177: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 183: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 187: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 188: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 194: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 198: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 199: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 205: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 209: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 210: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 216: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 220: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 221: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 227: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 231: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 232: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 238: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 242: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 243: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 249: Signal &lt;<arg fmt="%s" index="1">ps_Z</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 257: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 258: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 264: Signal &lt;<arg fmt="%s" index="1">ps_Z</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 272: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 273: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 279: Signal &lt;<arg fmt="%s" index="1">ps_C</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 287: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 288: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 294: Signal &lt;<arg fmt="%s" index="1">IR</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 298: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 299: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 309: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 310: Signal &lt;<arg fmt="%s" index="1">ps_N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\control_unit.v" Line 320: Signal &lt;<arg fmt="%s" index="1">N</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\RISCProcessor.v" Line 75: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">status</arg>&gt;. Formal port size is <arg fmt="%d" index="2">16</arg>-bit while actual signal size is <arg fmt="%d" index="1">8</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="1499" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\ipcore_dir\ram_256x16.v" Line 39: Empty module &lt;<arg fmt="%s" index="1">ram_256x16</arg>&gt; remains a black box.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"C:\Users\Sean Jr\Desktop\CECS 301\RISCProcessor a\top_level.v" Line 60: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">addr</arg>&gt;. Formal port size is <arg fmt="%d" index="2">8</arg>-bit while actual signal size is <arg fmt="%d" index="1">16</arg>-bit.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">W_Adr&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">W_Adr&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">W_Adr&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R_Adr&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R_Adr&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R_Adr&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">S_Adr&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">S_Adr&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">S_Adr&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">adr_sel</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">s_sel</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">pc_inc</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">pc_ld</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">pc_sel</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">ir_ld</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">mw_en</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rw_en</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">alu_op&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">alu_op&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">alu_op&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">alu_op&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">ns_C</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">ns_Z</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">ns_N</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">status&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">nextstate&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">nextstate&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">nextstate&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">nextstate&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">nextstate&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_op_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fsm</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="3218" delta="old" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram__n0211</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="old" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_n0024</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="3218" delta="old" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_n0048</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">alu_op_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">cu</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2040" delta="old" >Unit <arg fmt="%s" index="1">RegisterFile</arg>: <arg fmt="%d" index="2">32</arg> multi-source signals are replaced by logic (pull-up <arg fmt="%s" index="3">yes</arg>): </msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">clk_divider/i_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_17</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_18</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_20</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_21</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_22</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_23</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_24</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_25</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_26</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_27</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_28</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_29</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_30</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_31</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">top_level_verilog</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">display_controller/pixel_clock/i_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">top_level_verilog</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;clk_divider/i_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2169" delta="old" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

